#include <stdio.h>
#include <iostream>
#include <math.h>
#include<bits/stdc++.h>
using namespace std;

int largestRectangle(int h[], int n)
{
    stack<int> Stack;
    int area=0;
    int max_area=0;
    int top_item;
    int i=0;
    
    while (i<n)
    {
        if (Stack.empty() || h[Stack.top()] <= h[i])
        {
            Stack.push(i);
            i++;
        }
        
        else
        {
            top_item = Stack.top();
            Stack.pop();
            
            if (!Stack.empty())
            {
                area = h[top_item]*(i - Stack.top() - 1);
            }
            
            else
            {
                area = i;
            }
            
            if (area>=max_area)
            {
                max_area = area;
            }
        }
    }
    
    while (!Stack.empty())
    {
        top_item = Stack.top();
        Stack.pop();
        
            if (!Stack.empty())
            {
                area = h[top_item]*(i - Stack.top() - 1);
            }
            
            else
            {
                area = i;
            }
            
            if (area>=max_area)
            {
                max_area = area;
            }
        
    }
    
                
    return max_area;
        
}


int main()
{
    int hist[] = {1,2,3,4,5};
    int n = size(hist);
    cout<<largestRectangle(hist, n);

    return 0;
}
